#################
01-Mini Project
##################

-> Develop one microservice to manage insurance plans of our project

-> Microservice should have below functionalities


1) Create Plan

2) View Plans

3) Edit & Update Plan

4) Activate & De-Activate

5) Delete Plan (Hard Delete)


Key-Points: 

Tech Stack : Spring Boot, REST API, Data JPA & H2 DB

-> Use Embedded Database (h2) For Storage
-> Provide Swagger Documentation
-> Push Code into Git Hub Repo
-> Deploy Project into AWS Cloud Using JENKINS CI CD


##############
Database Table
##############

Table-1 : PLAN_CATEGORY

CATEGORY_ID   			NUMBER		PRIMARY KEY
CATEGORY_NAME		VARCHAR
ACTIVE_SW				CHAR
CREATE_DATE			DATE
UPDATE_DATE			DATE
CREATED_BY			VARCHAR
UPDATED_BY			VARCHAR


Table-2 :  PLAN_MASTER

PLAN_ID						NUMBER			PRIMARY KEY
PLAN_NAME					VARCHAR
PLAN_START_DATE			DATE			
PLAN_END_DATE				DATE
PLAN_CATEGORY_ID			NUMBER
ACTIVE_SW					CHAR
CREATE_DATE				DATE
UPDATE_DATE				DATE
CREATED_BY				VARCHAR
UPDATED_BY				VARCHAR




Entity Classes
------------------------
PlanCategory.java
Plan.java


Dao Layer / Repository Layer
---------------------------------------
PlanCategoryRepo.java 
PlanRepo.java


Service Layer
--------------------
PlanService.java (I)
PlanServiceImpl.java (C)

WebLayer
--------------
PlanRestController.java


Config
----------
SwaggerConfig.java


#################
Project Setup
################


Step-1) Create Spring Boot Application with below depenencies

		a)  starter-web
		b)  starter-data-jpa
		c)  h2 
		d) devtools
		c) swagger 
		d) swagger-ui
		e) project lombok


		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>


Step-2) Configure DataSource Properties in application.properties file

# Data Source Properties
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=ashokit
spring.datasource.password=ashokit
spring.datasource.driver-class-name=org.h2.Driver

# ORM Properties
spring.jpa.hibernate.ddl-auto= update


Note: For DB testing purpose run the application and access h2-console using below URL

		URL : http://localhost:port/h2-console


Step-3) Create Entity classes with Database tables mapping

Step-4 ) Create Repository Interfaces


Note: Run the application and verify database (Tables should be created)


Step-5) Create Service interface with Implementation  (business logic)

Step-6) Create Rest Controller with Required methods (Request Handlers)

Step-7) Create Swagger Config class to generate documentation

@Configuration
@EnableSwagger2
public class SwaggerConfig {
	
	@Bean
	public Docket apiDoc() {
		
		return new Docket(DocumentationType.SWAGGER_2)
				   .select()
				   .apis(RequestHandlerSelectors.basePackage("in.ashokit.rest"))
				   .paths(PathSelectors.any())
				   .build();
	}
}

Step-8) Run the application and test it using Swagger-UI

		
		http://localhost:8080/swagger-ui.html


---------------------------------------------------------------------

spring-boot-parent-version : 2.5.5

















